## Version 0.117
##
- hosts: OneViewManagedBmcs
  connection: local
  gather_facts: False
  vars:
          URL: "https://{{ inventory_hostname }}:{{ ansible_port }}"
          ChassisURI: "{{ URL }}/redfish/v1/Chassis"
          NewIndicatorLEDValue: 'ToBeDefined'
          
  tasks:

          - name: 1.0- Discover chassis collection in standard root service /redfish/v1/Chassis
            uri:
                    url: "{{ ChassisURI }}"
                    return_content: yes
                    validate_certs: no
                    method: GET
                    headers:
                            X-Auth-Token: "{{ token }}"
                            accept: 'application/json'
                            content-type: 'application/json'
            register: ChassisInventory 
            
          - name: 1.1- Save location of each item of the collection
            set_fact:
               ChassisLocationCollection: "{{ ChassisInventory.content | from_json 
                       | json_query('Members[].\"@odata.id\"') }}"

                

          - name: 2.0- Retrieve and print selected properties of each item of the collection
            uri:
                    url: "{{ URL }}/{{ item }}"
                    return_content: yes
                    validate_certs: no
                    method: GET
                    headers:
                            X-Auth-Token: "{{ token }}"
                            accept: 'application/json'
                            content-type: 'application/json'
            with_items: "{{ ChassisLocationCollection }}"
            register: ChassisCollectionProperties 
          
          - debug:
                msg: "{{ ChassisCollectionProperties.results | json_query('[].json.{Id: \"@odata.id\", ChassisType: ChassisType, IndicatorLED: IndicatorLED}') }}"
        
          
          - name: 2.1- Save IndicatorLED value for each item in the collection
            set_fact:
               IndicatorLEDValue: "{{ ChassisCollectionProperties.results | json_query('[].json.{IndicatorLED: IndicatorLED}') }}"
              
          #- debug:
          #      msg: "{{ IndicatorLEDValue }}"


          - name: 2.2- Toggle each item IndicatorLED Value (TBD)
            set_fact:
               NewIndicatorLEDValue: "{% if lookup('vars', item|dict2items) == 'Off' %} 'Lit' {% else %} 'Off' {% endif %}"
               #NewIndicatorLEDValue: "{{ 'Off' if  lookup('vars', item) == 'Lit' else 'Off' }}"
            with_items: '{{ IndicatorLEDValue }}'

          
          - debug:
               msg: "{{ NewIndicatorLEDValue }}" 
          
          
          - name: 2.3- PATCH IndicatorLED with new value using Ansible build-in uri module
            uri:
                    url: "{{ ChassisURI }}"
                    return_content: yes
                    validate_certs: no
                    status_code:
                            - 200
                            - 201
                            - 204
                    method: PATCH
                    body_format: json
                    headers:
                            X-Auth-Token: "{{ token }}"
                            accept: 'application/json'
                            content-type: 'application/json'
                    body:
                            IndicatorLED: "{{ NewIndicatorLEDValue }}"

            register: IndicatorLEDPatchResponse

          - debug:
                msg="Response Status => {{ IndicatorLEDPatchResponse | json_query('status') }}"
            

          - name: 3.0- Retrieve (again) IndicatorLED New status to verify previous PATCH
            uri:
                    url: "{{ URL }}/{{ item }}"
                    return_content: yes
                    validate_certs: no
                    method: GET
                    headers:
                            X-Auth-Token: "{{ token }}"
                            accept: 'application/json'
                            content-type: 'application/json'
            with_items: "{{ ChassisLocationCollection }}"
            register: ChassisCollectionProperties 
          
          - debug:
                msg: "{{ ChassisCollectionProperties.results | json_query('[].json.{Id: \"@odata.id\", ChassisType: ChassisType, IndicatorLED: IndicatorLED}') }}"

